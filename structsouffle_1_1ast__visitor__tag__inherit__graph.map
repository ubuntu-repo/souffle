<map id="souffle::ast_visitor_tag" name="souffle::ast_visitor_tag">
<area shape="rect" id="node2" href="$structsouffle_1_1_ast_visitor.html" title="{souffle::AstVisitor\l\&lt; void \&gt;\n||+ operator()()\l+ visit()\l+ ~AstVisitor()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\land 7 more...\l}" alt="" coords="49,131,182,413"/>
<area shape="rect" id="node4" href="$structsouffle_1_1_ast_visitor.html" title="{souffle::AstVisitor\l\&lt; void, std::ostream &amp; \&gt;\n||+ operator()()\l+ visit()\l+ ~AstVisitor()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\l# LINK()\land 7 more...\l}" alt="" coords="223,131,405,413"/>
<area shape="rect" id="node7" href="$structsouffle_1_1_ast_visitor.html" title="The generic base type of all AstVisitors realizing the dispatching of visitor calls. " alt="" coords="430,131,563,413"/>
<area shape="rect" id="node3" href="$structsouffle_1_1detail_1_1_lambda_ast_visitor.html" title="A specialized visitor wrapping a lambda function â€“ an auxiliary type required for visitor convenienc..." alt="" coords="5,593,193,700"/>
<area shape="rect" id="node5" href="$classsouffle_1_1_bdd_bdd_b_translator.html" title="Bddbddb converter class. " alt="" coords="217,483,411,810"/>
<area shape="rect" id="node6" href="$classsouffle_1_1_logicblox_converter.html" title="{souffle::LogicbloxConverter\n|&#45; dout\l&#45; eout\l&#45; extra_literals\l&#45; ioTypes\l&#45; iout\l|+ convert()\l+ LogicbloxConverter()\l&#45; convertTypeName()\l&#45; visitAtom()\l&#45; visitBinaryConstraint()\l&#45; visitClause()\l&#45; visitFunctor()\l&#45; visitNegation()\l&#45; visitNode()\l&#45; visitNumberConstant()\l&#45; visitProgram()\l&#45; visitRelation()\l&#45; visitRelationIdentifier()\l&#45; visitStringConstant()\l&#45; visitTypeCast()\l&#45; visitUnnamedVariable()\l&#45; visitVariable()\l}" alt="" coords="435,461,630,832"/>
</map>
